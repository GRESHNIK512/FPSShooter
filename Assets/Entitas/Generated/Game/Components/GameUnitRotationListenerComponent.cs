//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public UnitRotationListenerComponent unitRotationListener { get { return (UnitRotationListenerComponent)GetComponent(GameComponentsLookup.UnitRotationListener); } }
    public bool hasUnitRotationListener { get { return HasComponent(GameComponentsLookup.UnitRotationListener); } }

    public void AddUnitRotationListener(System.Collections.Generic.List<IUnitRotationListener> newValue) {
        var index = GameComponentsLookup.UnitRotationListener;
        var component = (UnitRotationListenerComponent)CreateComponent(index, typeof(UnitRotationListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceUnitRotationListener(System.Collections.Generic.List<IUnitRotationListener> newValue) {
        var index = GameComponentsLookup.UnitRotationListener;
        var component = (UnitRotationListenerComponent)CreateComponent(index, typeof(UnitRotationListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveUnitRotationListener() {
        RemoveComponent(GameComponentsLookup.UnitRotationListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherUnitRotationListener;

    public static Entitas.IMatcher<GameEntity> UnitRotationListener {
        get {
            if (_matcherUnitRotationListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.UnitRotationListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherUnitRotationListener = matcher;
            }

            return _matcherUnitRotationListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddUnitRotationListener(IUnitRotationListener value) {
        var listeners = hasUnitRotationListener
            ? unitRotationListener.value
            : new System.Collections.Generic.List<IUnitRotationListener>();
        listeners.Add(value);
        ReplaceUnitRotationListener(listeners);
    }

    public void RemoveUnitRotationListener(IUnitRotationListener value, bool removeComponentWhenEmpty = true) {
        var listeners = unitRotationListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveUnitRotationListener();
        } else {
            ReplaceUnitRotationListener(listeners);
        }
    }
}
