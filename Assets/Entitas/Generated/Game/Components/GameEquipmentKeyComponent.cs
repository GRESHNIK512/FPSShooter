//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public EquipmentKeyComponent equipmentKey { get { return (EquipmentKeyComponent)GetComponent(GameComponentsLookup.EquipmentKey); } }
    public bool hasEquipmentKey { get { return HasComponent(GameComponentsLookup.EquipmentKey); } }

    public void AddEquipmentKey(string newValue) {
        var index = GameComponentsLookup.EquipmentKey;
        var component = (EquipmentKeyComponent)CreateComponent(index, typeof(EquipmentKeyComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceEquipmentKey(string newValue) {
        var index = GameComponentsLookup.EquipmentKey;
        var component = (EquipmentKeyComponent)CreateComponent(index, typeof(EquipmentKeyComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveEquipmentKey() {
        RemoveComponent(GameComponentsLookup.EquipmentKey);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherEquipmentKey;

    public static Entitas.IMatcher<GameEntity> EquipmentKey {
        get {
            if (_matcherEquipmentKey == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.EquipmentKey);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherEquipmentKey = matcher;
            }

            return _matcherEquipmentKey;
        }
    }
}
