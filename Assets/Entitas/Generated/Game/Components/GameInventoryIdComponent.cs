//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public InventoryIdComponent inventoryId { get { return (InventoryIdComponent)GetComponent(GameComponentsLookup.InventoryId); } }
    public bool hasInventoryId { get { return HasComponent(GameComponentsLookup.InventoryId); } }

    public void AddInventoryId(System.Collections.Generic.List<int> newValue) {
        var index = GameComponentsLookup.InventoryId;
        var component = (InventoryIdComponent)CreateComponent(index, typeof(InventoryIdComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceInventoryId(System.Collections.Generic.List<int> newValue) {
        var index = GameComponentsLookup.InventoryId;
        var component = (InventoryIdComponent)CreateComponent(index, typeof(InventoryIdComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveInventoryId() {
        RemoveComponent(GameComponentsLookup.InventoryId);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInventoryId;

    public static Entitas.IMatcher<GameEntity> InventoryId {
        get {
            if (_matcherInventoryId == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.InventoryId);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInventoryId = matcher;
            }

            return _matcherInventoryId;
        }
    }
}
