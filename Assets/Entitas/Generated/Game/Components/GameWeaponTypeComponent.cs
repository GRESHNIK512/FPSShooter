//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public WeaponTypeComponent weaponType { get { return (WeaponTypeComponent)GetComponent(GameComponentsLookup.WeaponType); } }
    public bool hasWeaponType { get { return HasComponent(GameComponentsLookup.WeaponType); } }

    public void AddWeaponType(WeaponType newValue) {
        var index = GameComponentsLookup.WeaponType;
        var component = (WeaponTypeComponent)CreateComponent(index, typeof(WeaponTypeComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceWeaponType(WeaponType newValue) {
        var index = GameComponentsLookup.WeaponType;
        var component = (WeaponTypeComponent)CreateComponent(index, typeof(WeaponTypeComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveWeaponType() {
        RemoveComponent(GameComponentsLookup.WeaponType);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWeaponType;

    public static Entitas.IMatcher<GameEntity> WeaponType {
        get {
            if (_matcherWeaponType == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.WeaponType);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWeaponType = matcher;
            }

            return _matcherWeaponType;
        }
    }
}
