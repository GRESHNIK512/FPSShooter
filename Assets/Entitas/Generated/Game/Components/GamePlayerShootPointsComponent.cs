//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PlayerShootPointsComponent playerShootPoints { get { return (PlayerShootPointsComponent)GetComponent(GameComponentsLookup.PlayerShootPoints); } }
    public bool hasPlayerShootPoints { get { return HasComponent(GameComponentsLookup.PlayerShootPoints); } }

    public void AddPlayerShootPoints(UnityEngine.Transform[] newValue) {
        var index = GameComponentsLookup.PlayerShootPoints;
        var component = (PlayerShootPointsComponent)CreateComponent(index, typeof(PlayerShootPointsComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePlayerShootPoints(UnityEngine.Transform[] newValue) {
        var index = GameComponentsLookup.PlayerShootPoints;
        var component = (PlayerShootPointsComponent)CreateComponent(index, typeof(PlayerShootPointsComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerShootPoints() {
        RemoveComponent(GameComponentsLookup.PlayerShootPoints);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPlayerShootPoints;

    public static Entitas.IMatcher<GameEntity> PlayerShootPoints {
        get {
            if (_matcherPlayerShootPoints == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PlayerShootPoints);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPlayerShootPoints = matcher;
            }

            return _matcherPlayerShootPoints;
        }
    }
}
