//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MaxMassComponent maxMass { get { return (MaxMassComponent)GetComponent(GameComponentsLookup.MaxMass); } }
    public bool hasMaxMass { get { return HasComponent(GameComponentsLookup.MaxMass); } }

    public void AddMaxMass(float newValue) {
        var index = GameComponentsLookup.MaxMass;
        var component = (MaxMassComponent)CreateComponent(index, typeof(MaxMassComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMaxMass(float newValue) {
        var index = GameComponentsLookup.MaxMass;
        var component = (MaxMassComponent)CreateComponent(index, typeof(MaxMassComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMaxMass() {
        RemoveComponent(GameComponentsLookup.MaxMass);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMaxMass;

    public static Entitas.IMatcher<GameEntity> MaxMass {
        get {
            if (_matcherMaxMass == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MaxMass);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMaxMass = matcher;
            }

            return _matcherMaxMass;
        }
    }
}
