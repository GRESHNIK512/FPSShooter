//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameEquipmentTypeListenerComponent gameEquipmentTypeListener { get { return (GameEquipmentTypeListenerComponent)GetComponent(GameComponentsLookup.GameEquipmentTypeListener); } }
    public bool hasGameEquipmentTypeListener { get { return HasComponent(GameComponentsLookup.GameEquipmentTypeListener); } }

    public void AddGameEquipmentTypeListener(System.Collections.Generic.List<IGameEquipmentTypeListener> newValue) {
        var index = GameComponentsLookup.GameEquipmentTypeListener;
        var component = (GameEquipmentTypeListenerComponent)CreateComponent(index, typeof(GameEquipmentTypeListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGameEquipmentTypeListener(System.Collections.Generic.List<IGameEquipmentTypeListener> newValue) {
        var index = GameComponentsLookup.GameEquipmentTypeListener;
        var component = (GameEquipmentTypeListenerComponent)CreateComponent(index, typeof(GameEquipmentTypeListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGameEquipmentTypeListener() {
        RemoveComponent(GameComponentsLookup.GameEquipmentTypeListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameEquipmentTypeListener;

    public static Entitas.IMatcher<GameEntity> GameEquipmentTypeListener {
        get {
            if (_matcherGameEquipmentTypeListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameEquipmentTypeListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameEquipmentTypeListener = matcher;
            }

            return _matcherGameEquipmentTypeListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddGameEquipmentTypeListener(IGameEquipmentTypeListener value) {
        var listeners = hasGameEquipmentTypeListener
            ? gameEquipmentTypeListener.value
            : new System.Collections.Generic.List<IGameEquipmentTypeListener>();
        listeners.Add(value);
        ReplaceGameEquipmentTypeListener(listeners);
    }

    public void RemoveGameEquipmentTypeListener(IGameEquipmentTypeListener value, bool removeComponentWhenEmpty = true) {
        var listeners = gameEquipmentTypeListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveGameEquipmentTypeListener();
        } else {
            ReplaceGameEquipmentTypeListener(listeners);
        }
    }
}
