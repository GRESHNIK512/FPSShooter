//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class DataEntity {

    static readonly SaveData.LoadDataComponent loadDataComponent = new SaveData.LoadDataComponent();

    public bool isLoadData {
        get { return HasComponent(DataComponentsLookup.LoadData); }
        set {
            if (value != isLoadData) {
                var index = DataComponentsLookup.LoadData;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : loadDataComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class DataMatcher {

    static Entitas.IMatcher<DataEntity> _matcherLoadData;

    public static Entitas.IMatcher<DataEntity> LoadData {
        get {
            if (_matcherLoadData == null) {
                var matcher = (Entitas.Matcher<DataEntity>)Entitas.Matcher<DataEntity>.AllOf(DataComponentsLookup.LoadData);
                matcher.componentNames = DataComponentsLookup.componentNames;
                _matcherLoadData = matcher;
            }

            return _matcherLoadData;
        }
    }
}
